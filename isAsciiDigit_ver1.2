 * isAsciiDigit - return 1 if 0x30 <= x <= 0x39 (ASCII codes for characters '0' to '9')
 *   Example: isAsciiDigit(0x35) = 1.
 *            isAsciiDigit(0x3a) = 0.
 *            isAsciiDigit(0x05) = 0.
 *   Legal ops: ! ~ & ^ | + << >>
 *   Max ops: 15
 *   Rating: 3
 */
int isAsciiDigit(int x) {
    /* in 0x30 and 0x39, only the last 4 bits are different, exploit this discrepancy to compute
    * and subtraction will be achieve by +(~x+1) 
    * compare bit4 to bit7 with 0x30 first, then make sure 0x09 - x's last four bits are still positive*/ 
    int result=(!((0x30>>4)^(x>>4)))&(((0x09+(~((x<<28)>>28)+1))^0x08)>>3);
    return result;
    
}
